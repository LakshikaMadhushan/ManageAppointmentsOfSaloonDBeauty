/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.salone.view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lk.ijse.salone.Controller.AppointmentController;
import lk.ijse.salone.Controller.CatogeryController;
import lk.ijse.salone.Controller.CustomerController;
import lk.ijse.salone.Controller.EmployeeController;
import lk.ijse.salone.Controller.MainController;
import lk.ijse.salone.Controller.ServiceController;
import lk.ijse.salone.Model.Appointment;
import lk.ijse.salone.Model.AppointmentService;
import lk.ijse.salone.Model.Customer;
import lk.ijse.salone.Model.Employee;
import lk.ijse.salone.Model.Service;

/**
 *
 * @author Lakshika
 */
public class AddAppointmentPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReportForm
     */
    public AddAppointmentPanel() {
        try {
            initComponents();

            jPanel1.setBackground(new Color(0, 0, 0, 120));
            jPanel2.setBackground(new Color(0, 0, 0, 40));
            jPanel3.setBackground(new Color(0, 0, 0, 40));
            setDateTime();
            generateAppointmentId();
            loadAllCustomerIDS();
            loadAllEmployeeIDS();
            loadAllCatogeryIDS();
            txtTotalDuration.setText(0+"");
            txtTotal.setText(0.0+"");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelB = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDate1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtTime1 = new javax.swing.JTextField();
        txtEmployeeId = new javax.swing.JTextField();
        txtAppointmentId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbEmployeeId = new javax.swing.JComboBox<>();
        cmbServiceId = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        cmbCustomerId = new javax.swing.JComboBox<>();
        cmbCatogeryId = new javax.swing.JComboBox<>();
        txtCustomerId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtPrice = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtDuration = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtServiceName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtDate2 = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        txtTotalDuration = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelB.setBackground(new java.awt.Color(255, 255, 255));
        jPanelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanelB.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 10, 64));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/salone/Pictures/icons8_Add_New_65px.png"))); // NOI18N
        jLabel3.setText("Add Appointment");
        jLabel3.setIconTextGap(20);
        jPanelB.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 480, 70));

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        jPanelB.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 40, 180, 40));

        lblDate1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblDate1.setForeground(new java.awt.Color(255, 255, 255));
        jPanelB.add(lblDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 180, 40));
        jPanelB.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 80));

        txtTime1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanelB.add(txtTime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 130, 170, 40));

        txtEmployeeId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanelB.add(txtEmployeeId, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 270, 40));

        txtAppointmentId.setEditable(false);
        txtAppointmentId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanelB.add(txtAppointmentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 180, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Date");
        jPanelB.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 110, 140, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Employee Name");
        jPanelB.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 140, 20));

        cmbEmployeeId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmbEmployeeId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbEmployeeIdItemStateChanged(evt);
            }
        });
        cmbEmployeeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEmployeeIdActionPerformed(evt);
            }
        });
        jPanelB.add(cmbEmployeeId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 140, 40));

        cmbServiceId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmbServiceId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbServiceIdItemStateChanged(evt);
            }
        });
        cmbServiceId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbServiceIdActionPerformed(evt);
            }
        });
        jPanelB.add(cmbServiceId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 130, 40));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanelB.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 1030, 10));

        tbl1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "Time", "Date", "Duration"
            }
        ));
        jScrollPane1.setViewportView(tbl1);

        jPanelB.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 560, 120));

        cmbCustomerId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmbCustomerId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCustomerIdItemStateChanged(evt);
            }
        });
        cmbCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerIdActionPerformed(evt);
            }
        });
        jPanelB.add(cmbCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 130, 40));

        cmbCatogeryId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmbCatogeryId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCatogeryIdItemStateChanged(evt);
            }
        });
        cmbCatogeryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCatogeryIdActionPerformed(evt);
            }
        });
        jPanelB.add(cmbCatogeryId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 130, 40));

        txtCustomerId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanelB.add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 260, 40));

        tbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cus_ID", "Emp_ID", "Service_ID", "Price", "Duration(Minutes)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl);

        jPanelB.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 1000, 160));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Customer ID");
        jPanelB.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 120, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Time");
        jPanelB.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 110, 140, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Customer Name");
        jPanelB.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 140, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Appointment ID");
        jPanelB.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 150, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Employee ID");
        jPanelB.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 110, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Catogery ID");
        jPanelB.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 110, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Service ID");
        jPanelB.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 110, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel2.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, 190, 40));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Duration(Minutes)");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, 160, 20));

        txtDuration.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDurationActionPerformed(evt);
            }
        });
        jPanel2.add(txtDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 260, 190, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Price");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, 110, 20));

        txtServiceName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtServiceName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServiceNameActionPerformed(evt);
            }
        });
        jPanel2.add(txtServiceName, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, 190, 40));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Service Name");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, 110, 20));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/salone/Pictures/icons8_Checked_45px.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 50, 40));

        txtDate2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel2.add(txtDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 180, 40));

        jPanelB.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1030, 320));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Total Price:");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, 130, 40));

        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        jPanel3.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 220, 180, 40));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        jLabel17.setText("Appointment Duration(Minutes) :");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 320, 20));

        jButton3.setBackground(new java.awt.Color(51, 102, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/salone/Pictures/icons8_Save_40px.png"))); // NOI18N
        jButton3.setText("Place Oppointment");
        jButton3.setAutoscrolls(true);
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 250, 40));

        txtTotalDuration.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel3.add(txtTotalDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, 100, 40));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/salone/Pictures/icons8_Trash_Can_40px.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 0, 60, 50));

        jButton4.setBackground(new java.awt.Color(0, 153, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/salone/Pictures/icons8_Shopping_Cart_40px_3.png"))); // NOI18N
        jButton4.setText("To Cart");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, -1, 50));

        jPanelB.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 1030, 270));

        add(jPanelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 770));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbEmployeeIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbEmployeeIdItemStateChanged

        try {
            Employee E1 = new EmployeeController().getEmployee(cmbEmployeeId.getSelectedItem().toString());

            txtEmployeeId.setText(E1.getEmp_Name());
                Date date = txtDate2.getDate();
                 SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                 String format = formatter.format(date);
            ArrayList<Appointment> Appointments = AppointmentController.getAppointment(cmbEmployeeId.getSelectedItem().toString(),format);

            DefaultTableModel dtm = (DefaultTableModel) tbl1.getModel();
            dtm.setRowCount(0);

            for (Appointment appointment : Appointments) {
                Object[] rowData = {appointment.getAp_ID(), appointment.getActual_Service_Date(),
                    appointment.getActual_Service_Time(), appointment.getDuration()};

                dtm.addRow(rowData);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbEmployeeIdItemStateChanged

    private void cmbCustomerIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCustomerIdItemStateChanged
        try {
            Customer c1 = new CustomerController().getCustomer(cmbCustomerId.getSelectedItem().toString());

            txtCustomerId.setText(c1.getCus_Name());

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbCustomerIdItemStateChanged

    private void cmbCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCustomerIdActionPerformed

    private void cmbCatogeryIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCatogeryIdItemStateChanged
              
        try {
           
            System.out.println(cmbCatogeryId.getSelectedItem().toString());
          cmbServiceId.removeAllItems();
         
            ArrayList<String> allIDS = new ServiceController().getAllIDS(cmbCatogeryId.getSelectedItem().toString());
            System.out.println(allIDS);
            if(allIDS != null){
                for (String temp : allIDS) {

                    cmbServiceId.addItem(temp);
                }
            }
             
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbCatogeryIdItemStateChanged

    private void cmbEmployeeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEmployeeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEmployeeIdActionPerformed

    private void txtServiceNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServiceNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServiceNameActionPerformed

    private void cmbServiceIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbServiceIdItemStateChanged

    }//GEN-LAST:event_cmbServiceIdItemStateChanged

    private void txtDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDurationActionPerformed
       
       
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
         
        DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
        int serviceId = isAllreadyExists(cmbServiceId.getSelectedItem().toString());
        int employeeId = isEmployeeEquals(cmbEmployeeId.getSelectedItem().toString());
        int customerId = isCustomerEquals(cmbCustomerId.getSelectedItem().toString());
       
        
       
        if(txtServiceName.getText().length()==0){
            JOptionPane.showMessageDialog(this,"Please Confirm Service","Error", JOptionPane.ERROR_MESSAGE);
        }else{
        if (employeeId == -1 || customerId == -1) {
            
              JOptionPane.showMessageDialog(this,"Employee or Customer not matching for Appointment","Error", JOptionPane.ERROR_MESSAGE);
        } else {

            if (serviceId != -1) {

                String rowData[] = {
                    cmbCustomerId.getSelectedItem().toString(),
                    cmbEmployeeId.getSelectedItem().toString(),
                    cmbServiceId.getSelectedItem().toString(),
                    txtPrice.getText(),
                    txtDuration.getText().toString()
                };
                modal.addRow(rowData);
                 double price = Double.parseDouble(txtPrice.getText());
                  double price1 = Double.parseDouble(txtTotal.getText());
               
                int duration=Integer.parseInt(txtDuration.getText());
                int  duration1=Integer.parseInt(txtTotalDuration.getText());
                 
                txtTotal.setText(price+price1+"");
                 txtTotalDuration.setText(duration+duration1+"");
                 
                 txtServiceName.setText("");
                 txtPrice.setText("");
                 txtDuration.setText("");
                 Date date = txtDate2.getDate();
                
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                String format = formatter.format(date);
               
            } else {
                JOptionPane.showMessageDialog(this, "Already Added this service","Error", JOptionPane.ERROR_MESSAGE);
                
            }
        }
        
        
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int rowId = tbl.getSelectedRow();
       if (rowId != -1) {
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            double price=  Double.parseDouble((String) model.getValueAt(rowId,3)) ;
            int duration=  Integer.parseInt((String) model.getValueAt(rowId,4)) ;
            
            double price1=Double.parseDouble(txtTotal.getText());
            int duration1=Integer.parseInt(txtTotalDuration.getText());
            
            txtTotal.setText(price1-price+"");
            txtTotalDuration.setText(duration1-duration+"");

            
            model.removeRow(rowId);
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a raw","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
             DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
             Date date = txtDate2.getDate();
             SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
             String format = formatter.format(date);
            if(modal.getRowCount()==0){
               JOptionPane.showMessageDialog(this, "Pleace Select Service","Error", JOptionPane.ERROR_MESSAGE);
            }else{
            ArrayList<AppointmentService> list = new ArrayList();
           
            for (int i = 0; i < modal.getRowCount(); i++) {
               
                list.add(new AppointmentService(
                        txtAppointmentId.getText(),
                        (String) modal.getValueAt(i, 2),
                        Double.parseDouble((String) modal.getValueAt(i, 3))
                ));
                
            }
               
                 Appointment appointment = new Appointment(
                    cmbCustomerId.getSelectedItem().toString(),
                    cmbEmployeeId.getSelectedItem().toString(),
                    txtAppointmentId.getText(),
                    lblDate1.getText(),
                    lblTime.getText(),
                   
                    format,
                   
                    txtTime1.getText(),
                    Integer.parseInt(txtTotalDuration.getText()),
                    list
            );
            
            boolean isSaved = new AppointmentController().saveAppointment(appointment);
            if (isSaved) {
                JOptionPane.showMessageDialog(this, "Saved Successfully");
                DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
                dtm.setRowCount(0);
                generateAppointmentId();
                txtTotalDuration.setText(0+"");
                txtTotal.setText(0.0+"");
                setDateTime();
            } else {
                JOptionPane.showMessageDialog(this, "Try Again","Error", JOptionPane.ERROR_MESSAGE);
            }}
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void cmbCatogeryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCatogeryIdActionPerformed
        
    }//GEN-LAST:event_cmbCatogeryIdActionPerformed

    private void cmbServiceIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbServiceIdActionPerformed
     
    }//GEN-LAST:event_cmbServiceIdActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try {
            Service s1 = new ServiceController().getService(cmbServiceId.getSelectedItem().toString());
            
           

            if (s1 != null) {
               
                txtServiceName.setText(s1.getS_Name());
                String price = Double.toString(s1.getS_Price());
                txtPrice.setText(price);
                String a = Integer.toString(s1.getS_Duration());
                txtDuration.setText(a);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbCatogeryId;
    private javax.swing.JComboBox<String> cmbCustomerId;
    private javax.swing.JComboBox<String> cmbEmployeeId;
    private javax.swing.JComboBox<String> cmbServiceId;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDate1;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTable tbl;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField txtAppointmentId;
    private javax.swing.JTextField txtCustomerId;
    private com.toedter.calendar.JDateChooser txtDate2;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtEmployeeId;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtServiceName;
    private javax.swing.JTextField txtTime1;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalDuration;
    // End of variables declaration//GEN-END:variables
    private void setDateTime() {

        Date date = new Date();
        SimpleDateFormat format1 = new SimpleDateFormat("YYYY-MM-dd");

        lblDate1.setText(format1.format(date));
       
       //  SimpleDateFormat format3 = new SimpleDateFormat("MMM d, yyyy");
       
        txtDate2.setDate(date);
        
        
        SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");

       
        txtTime1.setText(format2.format(date));
         new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
                lblTime.setText(s.format(d));

            }
        }).start();

    
    }

    private void generateAppointmentId() {
        String appointmentId;
        try {
            appointmentId = MainController.getAppointmentId();
            txtAppointmentId.setText(appointmentId);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadAllCustomerIDS() throws ClassNotFoundException, SQLException {
        for (String temp : new CustomerController().getAllIDS()) {
            cmbCustomerId.addItem(temp);

        }
    }

    private void loadAllEmployeeIDS() throws ClassNotFoundException, SQLException {
        for (String temp : new EmployeeController().getAllIDS()) {
            cmbEmployeeId.addItem(temp);

        }
    }

    private void loadAllCatogeryIDS() throws ClassNotFoundException, SQLException {
        for (String temp : new CatogeryController().getAllIDS()) {
            cmbCatogeryId.addItem(temp);
        }
    }

    private int isAllreadyExists(String id) {
        DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
        for (int i = 0; i < modal.getRowCount(); i++) {
            String temp = (String) modal.getValueAt(i, 2);
            if (temp.equals(id)) {
                return -1;
            }
        }

        return 1;
    }

    private int isEmployeeEquals(String id) {

        DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
        for (int i = 0; i < modal.getRowCount(); i++) {
            String temp = (String) modal.getValueAt(i, 1);

            if (!temp.equals(id)) {
                return -1;
            }
        }

        return 1;
    }

    private int isCustomerEquals(String id) {
        DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
        for (int i = 0; i < modal.getRowCount(); i++) {
            String temp = (String) modal.getValueAt(i, 0);
            if (!temp.equals(id)) {
                return -1;
            }
        }

        return 1;
    }
}
